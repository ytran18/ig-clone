import { useRouter } from "next/router";

import Head from "next/head";
import PostArea from "../public/shared/PostArea";
import Right from "../public/shared/Right";
import Sidebar from "../public/shared/Sidebar";
import Story from "../public/shared/Story";
import Loading from "../public/shared/LoadingIg";

// firebase
import { ref, query, onValue, limitToFirst } from "firebase/database"
import { db } from "../src/firebase"
import { useEffect, useState } from "react";

// redux
import { useUserPackageHook } from "../public/redux/hooks"
import MobileSidebar from "../public/shared/MobileSidebar";

export default function Home() {

    // user
    const user = useUserPackageHook()
    // router
    const router = useRouter()

    useEffect(() =>
    {
        if(user?.userId == null) router.push("/auth/Login")
    },[user])

    // state
    const [posts, setPosts] = useState([]) // state to store posts get from firebase realtime database
    const [users, setUsers] = useState([]) // state to store users get from firebase realtime database

    // query to get post from firebase realtime database
    const getPost = query(ref(db,"posts/"))
    // query to get some users from firebase realtime database
    const getUsers = query(ref(db, "users/"), limitToFirst(5))

    // get all posts from firebase realtime database
    useEffect(() =>
    {
        onValue(getPost, (snapshot) =>
        {
            const value = snapshot.val()
            if (value != null)
            {
                let postObject = Object.values(value)
                setPosts(postObject)
            }
        })
    },[])
    // get 5 users from firebase realtime database
    useEffect(() =>
    {
        onValue(getUsers, (snapshot) =>
        {
            const value = snapshot.val()
            if (value != null)
            {
                let usersObject = Object.values(value)
                setUsers(usersObject)
            }
        })
    },[])

    return (
        <>
        {
            posts.length !== 0 ?
            (
                <>
                    <Head>
                        <title>Instagram - Clone</title>
                        <meta
                            name="description"
                            content="Generated by create next app"
                        />
                        <meta
                            name="viewport"
                            content="width=device-width, initial-scale=1"
                        />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    <div className="flex justify-between">
                        <div className="">
                            <Sidebar />
                        </div>
                        <div className="w-full h-screen">
                            <div className="w-full h-full flex flex-col overflow-auto scrollbar-hide">
                                <div className="h-[117px]">
                                    <Story />
                                </div>
                                <PostArea posts={posts}/>
                            </div>
                        </div>
                        <div className="hidden lg:flex justify-center">
                            <Right users={users}/>
                        </div>
                    </div>
                    <div className="fixed md:hidden bottom-0 h-[50px] z-10 bg-white p-4 w-full border-t-[1px] border-t-[rgb(219,219,2190)]">
                        <MobileSidebar />
                    </div>
                </>
            )
            :
            (
                <Loading />
            )
        }
        </>
    );
}


